Index: app/src/main/java/com/example/homeworkcorrectteacher/HomeworkCorrectActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrectteacher;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.GridView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.homeworkcorrectteacher.adapter.ImageAdapter;\r\nimport com.example.homeworkcorrectteacher.entity.Homework;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\npublic class HomeworkCorrectActivity extends AppCompatActivity {\r\n    private Button checkBtn;\r\n    private Homework homework;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_homework_correct);\r\n        final Intent intent = getIntent();\r\n        homework  = (Homework) intent.getSerializableExtra(\"homework\");\r\n        checkBtn = findViewById(R.id.checkdetail);\r\n        checkBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                CustomDialog.Builder builder = new CustomDialog.Builder(HomeworkCorrectActivity.this);\r\n                builder.setMessage(\"点击确定即表示接单，请在规定时间内完成批改\");\r\n                builder.setTitle(\"提示\");\r\n                builder.setPositiveButton(\"确定\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n//                        Toast.makeText(HomeworkCorrectActivity.this,\"您已接单\",Toast.LENGTH_SHORT).show();\r\n//                        Intent intent = new Intent(HomeworkCorrectActivity.this,LastCorrectActivity.class);\r\n//                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n//                        startActivity(intent);\r\n//                        finish();\r\n                        WhetherStartMarking();\r\n                    }\r\n                });\r\n\r\n                builder.setNegativeButton(\"取消\",\r\n                        new android.content.DialogInterface.OnClickListener() {\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                Toast.makeText(HomeworkCorrectActivity.this,\"您已取消\",Toast.LENGTH_SHORT).show();\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n\r\n                builder.create().show();\r\n            }\r\n        });\r\n        TextView tvTime = findViewById(R.id.time);\r\n        TextView tvDeadline = findViewById(R.id.deadline);\r\n        TextView tvSubject = findViewById(R.id.subject);\r\n        TextView tvMoney = findViewById(R.id.tv_money);\r\n        ScrollableGridView gvImage = findViewById(R.id.gridview111);\r\n        tvTime.setText(homework.getSubmitTime());\r\n        tvDeadline.setText(homework.getDeadline());\r\n        tvSubject.setText(homework.getHomeworkType());\r\n        //tvMoney.setText(homework.getMoney()+\"\");\r\n        ImageAdapter imageAdapter = new ImageAdapter(this,homework.getHomework_image(),R.layout.show_image_item_layout);\r\n        gvImage.setAdapter(imageAdapter);\r\n        gvImage.setVerticalSpacing(10);\r\n        gvImage.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {\r\n                new ShowImagesDialog(HomeworkCorrectActivity.this,homework.getHomework_image(),i).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public void WhetherStartMarking(){\r\n        CustomDialog.Builder builder = new CustomDialog.Builder(HomeworkCorrectActivity.this);\r\n        builder.setMessage(\"是否立即进行批改\");\r\n        builder.setTitle(\"提示\");\r\n        builder.setPositiveButton(\"是\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n                Intent intent = new Intent(HomeworkCorrectActivity.this,CorrectHomeworkActivity.class);\r\n                intent.putExtra(\"homework\",homework);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(intent);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        builder.setNegativeButton(\"否\",\r\n                new android.content.DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        Toast.makeText(HomeworkCorrectActivity.this,\"您已取消\",Toast.LENGTH_SHORT).show();\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n        builder.create().show();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrectteacher/HomeworkCorrectActivity.java	(revision 05e0b8ae9acc0ec4b9b2e2a13077485507272cc6)
+++ app/src/main/java/com/example/homeworkcorrectteacher/HomeworkCorrectActivity.java	(date 1607849359968)
@@ -5,6 +5,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
+import android.util.Log;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.Button;
@@ -15,12 +16,26 @@
 
 import com.example.homeworkcorrectteacher.adapter.ImageAdapter;
 import com.example.homeworkcorrectteacher.entity.Homework;
+import com.google.gson.Gson;
 
 import org.w3c.dom.Text;
 
+import java.io.File;
+import java.io.IOException;
+import java.util.Calendar;
+
+import okhttp3.Call;
+import okhttp3.Callback;
+import okhttp3.MediaType;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.RequestBody;
+import okhttp3.Response;
+
 public class HomeworkCorrectActivity extends AppCompatActivity {
     private Button checkBtn;
     private Homework homework;
+    private OkHttpClient okHttpClient = new OkHttpClient();
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -42,6 +57,7 @@
 //                        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
 //                        startActivity(intent);
 //                        finish();
+                        UpdateHomeworkTag();
                         WhetherStartMarking();
                     }
                 });
@@ -78,6 +94,34 @@
 
     }
 
+    private void UpdateHomeworkTag() {
+
+        String url = "";
+        url = IP.CONSTANT+ "UpdateHomeworkTagServlet?id="+homework.getId()+"&teacher_id=1";
+        Log.e("这是地址",url);
+        //RequestBody requestBody = RequestBody.create(MediaType.parse("text/plain;charset=UTF-8"),new Gson().toJson(homework));
+        Request request = new Request.Builder().get().url(url).build();
+        //3、创建Call对象，发送请求，并且接受响应数据
+        final Call call = okHttpClient.newCall(request);
+        //不需要手动创建多线程
+        call.enqueue(new Callback() {
+            @Override
+            public void onFailure(Call call, IOException e) {
+                //请求失败时回调的方法
+                e.printStackTrace();
+            }
+
+            @Override
+            public void onResponse(Call call, Response response) throws IOException {
+                //请求成功时回调的方法
+                Log.e("异步请求的结果",response.body().string());
+                homework.setTeacher_id(1);
+                homework.setTag("批改中");
+
+            }
+        });
+    }
+
 
     public void WhetherStartMarking(){
         CustomDialog.Builder builder = new CustomDialog.Builder(HomeworkCorrectActivity.this);
Index: imageeditlibrary/src/main/java/com/xinlan/imageeditlibrary/editimage/EditImageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.xinlan.imageeditlibrary.editimage;\r\n\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport android.text.TextUtils;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.Toast;\r\nimport android.widget.ViewFlipper;\r\n\r\nimport com.xinlan.imageeditlibrary.BaseActivity;\r\nimport com.xinlan.imageeditlibrary.R;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.AddTextFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.BeautyFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.CropFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.FilterListFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.MainMenuFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.PaintFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.RotateFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.fragment.StickerFragment;\r\nimport com.xinlan.imageeditlibrary.editimage.utils.FileUtil;\r\nimport com.xinlan.imageeditlibrary.editimage.view.CropImageView;\r\nimport com.xinlan.imageeditlibrary.editimage.view.CustomPaintView;\r\nimport com.xinlan.imageeditlibrary.editimage.view.CustomViewPager;\r\nimport com.xinlan.imageeditlibrary.editimage.view.RotateImageView;\r\nimport com.xinlan.imageeditlibrary.editimage.view.StickerView;\r\nimport com.xinlan.imageeditlibrary.editimage.view.TextStickerView;\r\nimport com.xinlan.imageeditlibrary.editimage.view.imagezoom.ImageViewTouch;\r\nimport com.xinlan.imageeditlibrary.editimage.utils.BitmapUtils;\r\nimport com.xinlan.imageeditlibrary.editimage.view.imagezoom.ImageViewTouchBase;\r\nimport com.xinlan.imageeditlibrary.editimage.widget.RedoUndoController;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\n\r\n/**\r\n * <p>\r\n * 图片编辑 主页面\r\n *\r\n * @author panyi\r\n *         <p>\r\n *         包含 1.贴图 2.滤镜 3.剪裁 4.底图旋转 功能\r\n *         add new modules\r\n */\r\npublic class EditImageActivity extends BaseActivity {\r\n    public static final String FILE_PATH = \"file_path\";\r\n    public static final String EXTRA_OUTPUT = \"extra_output\";\r\n    public static final String SAVE_FILE_PATH = \"save_file_path\";\r\n\r\n    public static final String IMAGE_IS_EDIT = \"image_is_edit\";\r\n\r\n    public static final int MODE_NONE = 0;\r\n    public static final int MODE_STICKERS = 1;// 贴图模式\r\n    public static final int MODE_FILTER = 2;// 滤镜模式\r\n    public static final int MODE_CROP = 3;// 剪裁模式\r\n    public static final int MODE_ROTATE = 4;// 旋转模式\r\n    public static final int MODE_TEXT = 5;// 文字模式\r\n    public static final int MODE_PAINT = 6;//绘制模式\r\n    public static final int MODE_BEAUTY = 7;//美颜模式\r\n\r\n    public String filePath;// 需要编辑图片路径\r\n    public String saveFilePath;// 生成的新图片路径\r\n    private int imageWidth, imageHeight;// 展示图片控件 宽 高\r\n    private LoadImageTask mLoadImageTask;\r\n\r\n    public int mode = MODE_NONE;// 当前操作模式\r\n\r\n    protected int mOpTimes = 0;\r\n    protected boolean isBeenSaved = false;\r\n\r\n    private EditImageActivity mContext;\r\n    private Bitmap mainBitmap;// 底层显示Bitmap\r\n    public ImageViewTouch mainImage;\r\n    private View backBtn;\r\n\r\n    public ViewFlipper bannerFlipper;\r\n    private View applyBtn;// 应用按钮\r\n    private View saveBtn;// 保存按钮\r\n\r\n    public StickerView mStickerView;// 贴图层View\r\n    public CropImageView mCropPanel;// 剪切操作控件\r\n    public RotateImageView mRotatePanel;// 旋转操作控件\r\n    public TextStickerView mTextStickerView;//文本贴图显示View\r\n    public CustomPaintView mPaintView;//涂鸦模式画板\r\n\r\n    public CustomViewPager bottomGallery;// 底部gallery\r\n    private BottomGalleryAdapter mBottomGalleryAdapter;// 底部gallery\r\n    private MainMenuFragment mMainMenuFragment;// Menu\r\n    public StickerFragment mStickerFragment;// 贴图Fragment\r\n    public FilterListFragment mFilterListFragment;// 滤镜FliterListFragment\r\n    public CropFragment mCropFragment;// 图片剪裁Fragment\r\n    public RotateFragment mRotateFragment;// 图片旋转Fragment\r\n    public AddTextFragment mAddTextFragment;//图片添加文字\r\n    public PaintFragment mPaintFragment;//绘制模式Fragment\r\n    public BeautyFragment mBeautyFragment;//美颜模式Fragment\r\n    private SaveImageTask mSaveImageTask;\r\n\r\n    private RedoUndoController mRedoUndoController;//撤销操作\r\n\r\n    /**\r\n     * @param context\r\n     * @param editImagePath\r\n     * @param outputPath\r\n     * @param requestCode\r\n     */\r\n    public static void start(Activity context, final String editImagePath, final String outputPath, final int requestCode) {\r\n        if (TextUtils.isEmpty(editImagePath)) {\r\n            Toast.makeText(context, R.string.no_choose, Toast.LENGTH_SHORT).show();\r\n            return;\r\n        }\r\n\r\n        Intent it = new Intent(context, EditImageActivity.class);\r\n        it.putExtra(EditImageActivity.FILE_PATH, editImagePath);\r\n        it.putExtra(EditImageActivity.EXTRA_OUTPUT, outputPath);\r\n        context.startActivityForResult(it, requestCode);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        checkInitImageLoader();\r\n        setContentView(R.layout.activity_image_edit);\r\n        initView();\r\n        getData();\r\n    }\r\n\r\n    private void getData() {\r\n        filePath = getIntent().getStringExtra(FILE_PATH);\r\n        saveFilePath = getIntent().getStringExtra(EXTRA_OUTPUT);// 保存图片路径\r\n        loadImage(filePath);\r\n    }\r\n\r\n    private void initView() {\r\n        mContext = this;\r\n        DisplayMetrics metrics = getResources().getDisplayMetrics();\r\n        imageWidth = metrics.widthPixels / 2;\r\n        imageHeight = metrics.heightPixels / 2;\r\n\r\n        bannerFlipper = (ViewFlipper) findViewById(R.id.banner_flipper);\r\n        bannerFlipper.setInAnimation(this, R.anim.in_bottom_to_top);\r\n        bannerFlipper.setOutAnimation(this, R.anim.out_bottom_to_top);\r\n        applyBtn = findViewById(R.id.apply);\r\n        applyBtn.setOnClickListener(new ApplyBtnClick());\r\n        saveBtn = findViewById(R.id.save_btn);\r\n        saveBtn.setOnClickListener(new SaveBtnClick());\r\n\r\n        mainImage = (ImageViewTouch) findViewById(R.id.main_image);\r\n        backBtn = findViewById(R.id.back_btn);// 退出按钮\r\n        backBtn.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        mStickerView = (StickerView) findViewById(R.id.sticker_panel);\r\n        mCropPanel = (CropImageView) findViewById(R.id.crop_panel);\r\n        mRotatePanel = (RotateImageView) findViewById(R.id.rotate_panel);\r\n        mTextStickerView = (TextStickerView) findViewById(R.id.text_sticker_panel);\r\n        mPaintView = (CustomPaintView) findViewById(R.id.custom_paint_view);\r\n\r\n        // 底部gallery\r\n        bottomGallery = (CustomViewPager) findViewById(R.id.bottom_gallery);\r\n        //bottomGallery.setOffscreenPageLimit(7);\r\n        mMainMenuFragment = MainMenuFragment.newInstance();\r\n        mBottomGalleryAdapter = new BottomGalleryAdapter(\r\n                this.getSupportFragmentManager());\r\n        mStickerFragment = StickerFragment.newInstance();\r\n        mFilterListFragment = FilterListFragment.newInstance();\r\n        mCropFragment = CropFragment.newInstance();\r\n        mRotateFragment = RotateFragment.newInstance();\r\n        mAddTextFragment = AddTextFragment.newInstance();\r\n        mPaintFragment = PaintFragment.newInstance();\r\n        mBeautyFragment = BeautyFragment.newInstance();\r\n\r\n        bottomGallery.setAdapter(mBottomGalleryAdapter);\r\n\r\n\r\n        mainImage.setFlingListener(new ImageViewTouch.OnImageFlingListener() {\r\n            @Override\r\n            public void onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {\r\n                //System.out.println(e1.getAction() + \" \" + e2.getAction() + \" \" + velocityX + \"  \" + velocityY);\r\n                if (velocityY > 1) {\r\n                    closeInputMethod();\r\n                }\r\n            }\r\n        });\r\n\r\n        mRedoUndoController = new RedoUndoController(this, findViewById(R.id.redo_uodo_panel));\r\n    }\r\n\r\n    /**\r\n     * 关闭输入法\r\n     */\r\n    private void closeInputMethod() {\r\n        if (mAddTextFragment.isAdded()) {\r\n            mAddTextFragment.hideInput();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @author panyi\r\n     */\r\n    private final class BottomGalleryAdapter extends FragmentPagerAdapter {\r\n        public BottomGalleryAdapter(FragmentManager fm) {\r\n            super(fm);\r\n        }\r\n\r\n        @Override\r\n        public Fragment getItem(int index) {\r\n            // System.out.println(\"createFragment-->\"+index);\r\n            switch (index) {\r\n                case MainMenuFragment.INDEX:// 主菜单\r\n                    return mMainMenuFragment;\r\n                case StickerFragment.INDEX:// 贴图\r\n                    return mStickerFragment;\r\n                case FilterListFragment.INDEX:// 滤镜\r\n                    return mFilterListFragment;\r\n                case CropFragment.INDEX://剪裁\r\n                    return mCropFragment;\r\n                case RotateFragment.INDEX://旋转\r\n                    return mRotateFragment;\r\n                case AddTextFragment.INDEX://添加文字\r\n                    return mAddTextFragment;\r\n                case PaintFragment.INDEX:\r\n                    return mPaintFragment;//绘制\r\n                case BeautyFragment.INDEX://美颜\r\n                    return mBeautyFragment;\r\n            }//end switch\r\n            return MainMenuFragment.newInstance();\r\n        }\r\n\r\n        @Override\r\n        public int getCount() {\r\n            return 8;\r\n        }\r\n    }// end inner class\r\n\r\n    /**\r\n     * 异步载入编辑图片\r\n     *\r\n     * @param filepath\r\n     */\r\n    public void loadImage(String filepath) {\r\n        if (mLoadImageTask != null) {\r\n            mLoadImageTask.cancel(true);\r\n        }\r\n        mLoadImageTask = new LoadImageTask();\r\n        mLoadImageTask.execute(filepath);\r\n    }\r\n\r\n    /**\r\n     * 导入文件图片任务\r\n     */\r\n    private final class LoadImageTask extends AsyncTask<String, Void, Bitmap> {\r\n        @Override\r\n        protected Bitmap doInBackground(String... params) {\r\n            return BitmapUtils.getSampledBitmap(params[0], imageWidth,\r\n                    imageHeight);\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Bitmap result) {\r\n            changeMainBitmap(result, false);\r\n        }\r\n    }// end inner class\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        switch (mode) {\r\n            case MODE_STICKERS:\r\n                mStickerFragment.backToMain();\r\n                return;\r\n            case MODE_FILTER:// 滤镜编辑状态\r\n                mFilterListFragment.backToMain();// 保存滤镜贴图\r\n                return;\r\n            case MODE_CROP:// 剪切图片保存\r\n                mCropFragment.backToMain();\r\n                return;\r\n            case MODE_ROTATE:// 旋转图片保存\r\n                mRotateFragment.backToMain();\r\n                return;\r\n            case MODE_TEXT:\r\n                mAddTextFragment.backToMain();\r\n                return;\r\n            case MODE_PAINT:\r\n                mPaintFragment.backToMain();\r\n                return;\r\n            case MODE_BEAUTY://从美颜模式中返回\r\n                mBeautyFragment.backToMain();\r\n                return;\r\n        }// end switch\r\n\r\n        if (canAutoExit()) {\r\n            onSaveTaskDone();\r\n        } else {//图片还未被保存    弹出提示框确认\r\n            AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);\r\n            alertDialogBuilder.setMessage(R.string.exit_without_save)\r\n                    .setCancelable(false).setPositiveButton(R.string.confirm, new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int id) {\r\n                    mContext.finish();\r\n                }\r\n            }).setNegativeButton(R.string.cancel, new DialogInterface.OnClickListener() {\r\n                public void onClick(DialogInterface dialog, int id) {\r\n                    dialog.cancel();\r\n                }\r\n            });\r\n\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 应用按钮点击\r\n     *\r\n     * @author panyi\r\n     */\r\n    private final class ApplyBtnClick implements OnClickListener {\r\n        @Override\r\n        public void onClick(View v) {\r\n            switch (mode) {\r\n                case MODE_STICKERS:\r\n                    mStickerFragment.applyStickers();// 保存贴图\r\n                    break;\r\n                case MODE_FILTER:// 滤镜编辑状态\r\n                    mFilterListFragment.applyFilterImage();// 保存滤镜贴图\r\n                    break;\r\n                case MODE_CROP:// 剪切图片保存\r\n                    mCropFragment.applyCropImage();\r\n                    break;\r\n                case MODE_ROTATE:// 旋转图片保存\r\n                    mRotateFragment.applyRotateImage();\r\n                    break;\r\n                case MODE_TEXT://文字贴图 图片保存\r\n                    mAddTextFragment.applyTextImage();\r\n                    break;\r\n                case MODE_PAINT://保存涂鸦\r\n                    mPaintFragment.savePaintImage();\r\n                    break;\r\n                case MODE_BEAUTY://保存美颜后的图片\r\n                    mBeautyFragment.applyBeauty();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }// end switch\r\n        }\r\n    }// end inner class\r\n\r\n    /**\r\n     * 保存按钮 点击退出\r\n     *\r\n     * @author panyi\r\n     */\r\n    private final class SaveBtnClick implements OnClickListener {\r\n        @Override\r\n        public void onClick(View v) {\r\n            if (mOpTimes == 0) {//并未修改图片\r\n                onSaveTaskDone();\r\n            } else {\r\n                doSaveImage();\r\n            }\r\n        }\r\n    }// end inner class\r\n\r\n    protected void doSaveImage() {\r\n        if (mOpTimes <= 0)\r\n            return;\r\n\r\n        if (mSaveImageTask != null) {\r\n            mSaveImageTask.cancel(true);\r\n        }\r\n\r\n        mSaveImageTask = new SaveImageTask();\r\n        mSaveImageTask.execute(mainBitmap);\r\n    }\r\n\r\n    /**\r\n     * @param newBit\r\n     * @param needPushUndoStack\r\n     */\r\n    public void changeMainBitmap(Bitmap newBit, boolean needPushUndoStack) {\r\n        if (newBit == null)\r\n            return;\r\n\r\n        if (mainBitmap == null || mainBitmap != newBit) {\r\n            if (needPushUndoStack) {\r\n                mRedoUndoController.switchMainBit(mainBitmap,newBit);\r\n                increaseOpTimes();\r\n            }\r\n            mainBitmap = newBit;\r\n            mainImage.setImageBitmap(mainBitmap);\r\n            mainImage.setDisplayType(ImageViewTouchBase.DisplayType.FIT_TO_SCREEN);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        if (mLoadImageTask != null) {\r\n            mLoadImageTask.cancel(true);\r\n        }\r\n\r\n        if (mSaveImageTask != null) {\r\n            mSaveImageTask.cancel(true);\r\n        }\r\n\r\n        if (mRedoUndoController != null) {\r\n            mRedoUndoController.onDestroy();\r\n        }\r\n    }\r\n\r\n    public void increaseOpTimes() {\r\n        mOpTimes++;\r\n        isBeenSaved = false;\r\n    }\r\n\r\n    public void resetOpTimes() {\r\n        isBeenSaved = true;\r\n    }\r\n\r\n    public boolean canAutoExit() {\r\n        return isBeenSaved || mOpTimes == 0;\r\n    }\r\n\r\n    protected void onSaveTaskDone() {\r\n        Intent returnIntent = new Intent();\r\n        returnIntent.putExtra(FILE_PATH, filePath);\r\n        returnIntent.putExtra(EXTRA_OUTPUT, saveFilePath);\r\n        returnIntent.putExtra(IMAGE_IS_EDIT, mOpTimes > 0);\r\n\r\n        //FileUtil.ablumUpdate(this, saveFilePath);\r\n        setResult(RESULT_OK, returnIntent);\r\n        finish();\r\n    }\r\n\r\n    /**\r\n     * 保存图像\r\n     * 完成后退出\r\n     */\r\n    private final class SaveImageTask extends AsyncTask<Bitmap, Void, Boolean> {\r\n        private Dialog dialog;\r\n\r\n        @Override\r\n        protected Boolean doInBackground(Bitmap... params) {\r\n            if (TextUtils.isEmpty(saveFilePath))\r\n                return false;\r\n\r\n            Log.e(\"这是saveFilePath\",saveFilePath);\r\n            return BitmapUtils.saveBitmap(params[0], saveFilePath);\r\n        }\r\n\r\n        @Override\r\n        protected void onCancelled() {\r\n            super.onCancelled();\r\n            dialog.dismiss();\r\n        }\r\n\r\n        @Override\r\n        protected void onCancelled(Boolean result) {\r\n            super.onCancelled(result);\r\n            dialog.dismiss();\r\n        }\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n            dialog = EditImageActivity.getLoadingDialog(mContext, R.string.saving_image, false);\r\n            dialog.show();\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Boolean result) {\r\n            super.onPostExecute(result);\r\n            dialog.dismiss();\r\n\r\n            if (result) {\r\n                resetOpTimes();\r\n                onSaveTaskDone();\r\n            } else {\r\n                Toast.makeText(mContext, R.string.save_error, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }//end inner class\r\n\r\n    public Bitmap getMainBit() {\r\n        return mainBitmap;\r\n    }\r\n\r\n}// end class\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- imageeditlibrary/src/main/java/com/xinlan/imageeditlibrary/editimage/EditImageActivity.java	(revision 05e0b8ae9acc0ec4b9b2e2a13077485507272cc6)
+++ imageeditlibrary/src/main/java/com/xinlan/imageeditlibrary/editimage/EditImageActivity.java	(date 1607908468565)
@@ -305,7 +305,9 @@
         }// end switch
 
         if (canAutoExit()) {
-            onSaveTaskDone();
+            //onSaveTaskDone();
+            Log.e("dianjile退出","未进行保存");
+            finish();
         } else {//图片还未被保存    弹出提示框确认
             AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);
             alertDialogBuilder.setMessage(R.string.exit_without_save)
@@ -333,6 +335,10 @@
         @Override
         public void onClick(View v) {
             switch (mode) {
+                case MODE_NONE:
+                    Log.e("点击了返回键","null");
+                    finish();
+                    break;
                 case MODE_STICKERS:
                     mStickerFragment.applyStickers();// 保存贴图
                     break;
Index: app/src/main/java/com/example/homeworkcorrectteacher/CorrectHomeworkActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrectteacher;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.TargetApi;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.target.SimpleTarget;\r\nimport com.bumptech.glide.request.transition.Transition;\r\nimport com.example.homeworkcorrectteacher.entity.Homework;\r\nimport com.xinlan.imageeditlibrary.editimage.EditImageActivity;\r\nimport com.xinlan.imageeditlibrary.editimage.utils.BitmapUtils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.OutputStream;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class CorrectHomeworkActivity extends AppCompatActivity {\r\n    private Homework homework;\r\n    private List<String> homework_image;//作业图片\r\n    private List<String> result_image;//结果图片\r\n    private int image_size;//图片总张数\r\n    private int image_current = 1;//当前是第几张\r\n    private String newFilePath;\r\n\r\n    private ImageView imgView;\r\n    private String url = \"\";\r\n    private Button editImage;//\r\n    private String path;//图片路径\r\n    private Bitmap myResource;\r\n    private Bitmap mainBitmap;\r\n    private int imageWidth, imageHeight;//\r\n    public static final int ACTION_REQUEST_EDITIMAGE = 9;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_correct_homework);\r\n        initView();\r\n\r\n    }\r\n\r\n    private void initView() {\r\n        DisplayMetrics metrics = getResources().getDisplayMetrics();\r\n        imageWidth = metrics.widthPixels;\r\n        imageHeight = metrics.heightPixels;\r\n\r\n        Intent intent = getIntent();\r\n        homework = (Homework) intent.getSerializableExtra(\"homework\");\r\n        Log.e(\"homework\", homework.toString());\r\n        homework_image = homework.getHomework_image();\r\n        image_size = homework_image.size();\r\n        Log.e(\"url\", url);\r\n\r\n        detailImage();\r\n\r\n    }\r\n\r\n\r\n    public void detailImage() {\r\n        if (image_current > image_size) {\r\n            Toast.makeText(this, \"作业批改完成\",\r\n                    Toast.LENGTH_SHORT).show();\r\n            return;\r\n        } else {\r\n            url = IP.CONSTANT + \"images/\" + homework_image.get(image_current - 1);\r\n            Glide.with(CorrectHomeworkActivity.this)\r\n                    .asBitmap()\r\n                    .load(url)\r\n                    .into(new SimpleTarget<Bitmap>() {\r\n                        @Override\r\n                        public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {\r\n                            requestAllPower();\r\n                            path = saveImage(resource);\r\n                            Log.e(\"save_path\", path);\r\n                            //编辑图片\r\n                            editImageClick();\r\n                        }\r\n                    });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private String saveImage(Bitmap image) {\r\n        String saveImagePath = null;\r\n        Random random = new Random();\r\n        String imageFileName = System.currentTimeMillis() + \".jpg\";\r\n        String dirName = \"images\";\r\n        File storageDir = new File(this.getFilesDir(), dirName);\r\n        boolean success = true;\r\n        if (!storageDir.exists()) {\r\n            success = storageDir.mkdirs();\r\n            Log.e(\"尝试创建文件夹\", success + \"\");\r\n        }\r\n        if (success) {\r\n            File imageFile = new File(storageDir, imageFileName);\r\n            saveImagePath = imageFile.getAbsolutePath();\r\n            try {\r\n                OutputStream fout = new FileOutputStream(imageFile);\r\n                image.compress(Bitmap.CompressFormat.JPEG, 100, fout);\r\n                fout.close();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return saveImagePath;\r\n    }\r\n\r\n    private void galleryAddPic(String imagePath) {\r\n        Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n        File f = new File(imagePath);\r\n        Uri contentUri = Uri.fromFile(f);\r\n        mediaScanIntent.setData(contentUri);\r\n        sendBroadcast(mediaScanIntent);\r\n    }\r\n\r\n\r\n    public void requestAllPower() {\r\n        if (ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                != PackageManager.PERMISSION_GRANTED) {\r\n            if (ActivityCompat.shouldShowRequestPermissionRationale(this,\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n            } else {\r\n                ActivityCompat.requestPermissions(this,\r\n                        new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                                Manifest.permission.READ_EXTERNAL_STORAGE}, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 编辑选择的图片\r\n     *\r\n     * @author panyi\r\n     */\r\n    private void editImageClick() {\r\n        String out_imageFileName = System.currentTimeMillis() + \".jpg\";\r\n        String out_dirName = \"out_images\";\r\n        File storageDir = new File(this.getFilesDir(), out_dirName);\r\n        boolean success = true;\r\n        if (!storageDir.exists()) {\r\n            success = storageDir.mkdirs();\r\n            Log.e(\"尝试创建文件夹\", success + \"\");\r\n        }\r\n        File imageFile = new File(storageDir, out_imageFileName);\r\n        File outputFile = FileUtils.genEditFile();\r\n        EditImageActivity.start(this, path, imageFile.getAbsolutePath(), ACTION_REQUEST_EDITIMAGE);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK) {\r\n            // System.out.println(\"RESULT_OK\");\r\n            switch (requestCode) {\r\n                case ACTION_REQUEST_EDITIMAGE://\r\n                    handleEditorImage(data);\r\n                    break;\r\n            }// end switch\r\n        }\r\n    }\r\n\r\n    private void handleEditorImage(Intent data) {\r\n        newFilePath = data.getStringExtra(EditImageActivity.EXTRA_OUTPUT);\r\n        boolean isImageEdit = data.getBooleanExtra(EditImageActivity.IMAGE_IS_EDIT, false);\r\n\r\n        if (isImageEdit) {\r\n            //Toast.makeText(this, getString(R.string.save_path, newFilePath), Toast.LENGTH_LONG).show();\r\n            Log.e(\"保存的路径newFilePath\", newFilePath);\r\n            image_current ++;\r\n            detailImage();\r\n        } else {//未编辑  还是用原来的图片\r\n            newFilePath = data.getStringExtra(EditImageActivity.FILE_PATH);\r\n            Log.e(\"未编辑还是用原来的图片path\", newFilePath);\r\n        }\r\n\r\n\r\n        //System.out.println(\"newFilePath---->\" + newFilePath);\r\n        //File file = new File(newFilePath);\r\n        //System.out.println(\"newFilePath size ---->\" + (file.length() / 1024)+\"KB\");\r\n//        Log.d(\"image is edit\", isImageEdit + \"\");\r\n//        LoadImageTask loadTask = new LoadImageTask();\r\n//        loadTask.execute(newFilePath);\r\n    }\r\n\r\n\r\n    private final class LoadImageTask extends AsyncTask<String, Void, Bitmap> {\r\n        @Override\r\n        protected Bitmap doInBackground(String... params) {\r\n            return BitmapUtils.getSampledBitmap(params[0], imageWidth / 4, imageHeight / 4);\r\n        }\r\n\r\n        @Override\r\n        protected void onCancelled() {\r\n            super.onCancelled();\r\n        }\r\n\r\n        @TargetApi(Build.VERSION_CODES.HONEYCOMB)\r\n        @Override\r\n        protected void onCancelled(Bitmap result) {\r\n            super.onCancelled(result);\r\n        }\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Bitmap result) {\r\n            super.onPostExecute(result);\r\n            if (mainBitmap != null) {\r\n                mainBitmap.recycle();\r\n                mainBitmap = null;\r\n                System.gc();\r\n            }\r\n            mainBitmap = result;\r\n            //imgView.setImageBitmap(mainBitmap);\r\n        }\r\n    }// end inner class\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrectteacher/CorrectHomeworkActivity.java	(revision 05e0b8ae9acc0ec4b9b2e2a13077485507272cc6)
+++ app/src/main/java/com/example/homeworkcorrectteacher/CorrectHomeworkActivity.java	(date 1607907304915)
@@ -25,23 +25,35 @@
 import com.bumptech.glide.request.target.SimpleTarget;
 import com.bumptech.glide.request.transition.Transition;
 import com.example.homeworkcorrectteacher.entity.Homework;
+import com.google.gson.Gson;
 import com.xinlan.imageeditlibrary.editimage.EditImageActivity;
 import com.xinlan.imageeditlibrary.editimage.utils.BitmapUtils;
 
 import java.io.File;
 import java.io.FileOutputStream;
+import java.io.IOException;
 import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.Calendar;
 import java.util.List;
 import java.util.Random;
 
+import okhttp3.Call;
+import okhttp3.Callback;
+import okhttp3.MediaType;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.RequestBody;
+import okhttp3.Response;
+
 public class CorrectHomeworkActivity extends AppCompatActivity {
     private Homework homework;
     private List<String> homework_image;//作业图片
-    private List<String> result_image;//结果图片
+    private List<String> result_image = new ArrayList<>();//结果图片
     private int image_size;//图片总张数
     private int image_current = 1;//当前是第几张
     private String newFilePath;
-
+    private OkHttpClient okHttpClient = new OkHttpClient();
     private ImageView imgView;
     private String url = "";
     private Button editImage;//
@@ -190,12 +202,14 @@
         if (isImageEdit) {
             //Toast.makeText(this, getString(R.string.save_path, newFilePath), Toast.LENGTH_LONG).show();
             Log.e("保存的路径newFilePath", newFilePath);
-            image_current ++;
-            detailImage();
         } else {//未编辑  还是用原来的图片
             newFilePath = data.getStringExtra(EditImageActivity.FILE_PATH);
             Log.e("未编辑还是用原来的图片path", newFilePath);
         }
+        uploadImagesOfHomework();
+        image_current ++;
+        detailImage();
+
 
 
         //System.out.println("newFilePath---->" + newFilePath);
@@ -242,5 +256,52 @@
         }
     }// end inner class
 
+    //上传批改后的作业图片
+    private void uploadImagesOfHomework() {
+        long time = Calendar.getInstance().getTimeInMillis();
+        Log.e("获取到的时间",time+"");
+        RequestBody body = RequestBody.create(MediaType.parse("application/octet-stream"),new File(newFilePath));
+        Log.e("list的内容",newFilePath);
+        Request request = new Request.Builder().post(body).url(IP.CONSTANT+"UploadHomeworkResultImageServlet?imgName="+time+".jpg").build();
+        result_image.add(time+".jpg");
+        homework.setResult_image(result_image);
+
+        Call call = okHttpClient.newCall(request);
+        call.enqueue(new Callback() {
+            @Override
+            public void onFailure(Call call, IOException e) {
+                e.printStackTrace();
+            }
+
+            //图片上传完成
+            @Override
+            public void onResponse(Call call, Response response) throws IOException {
+                UpdateWorkInfo();
+            }
+        });
+    }
+
+
+    private void UpdateWorkInfo() {
+        RequestBody requestBody = RequestBody.create(MediaType.parse("text/plain;charset=UTF-8"),new Gson().toJson(homework));
+        Request request = new Request.Builder().post(requestBody).url(IP.CONSTANT+"UpdateWorkInfoServlet?tag=1").build();
+        //3、创建Call对象，发送请求，并且接受响应数据
+        final Call call = okHttpClient.newCall(request);
+        //不需要手动创建多线程
+        call.enqueue(new Callback() {
+            @Override
+            public void onFailure(Call call, IOException e) {
+                //请求失败时回调的方法
+                e.printStackTrace();
+            }
+
+            @Override
+            public void onResponse(Call call, Response response) throws IOException {
+                //请求成功时回调的方法
+                Log.e("异步请求的结果",response.body().string());
+            }
+        });
+    }
+
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/homeworkcorrectteacher/IP.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.homeworkcorrectteacher;\r\n\r\npublic class IP {\r\n    public static final String CONSTANT = \"http://10.7.90.254:8080/HomeworkCorrect_server/\";\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/homeworkcorrectteacher/IP.java	(revision 05e0b8ae9acc0ec4b9b2e2a13077485507272cc6)
+++ app/src/main/java/com/example/homeworkcorrectteacher/IP.java	(date 1607905006914)
@@ -1,5 +1,6 @@
 package com.example.homeworkcorrectteacher;
 
 public class IP {
-    public static final String CONSTANT = "http://10.7.90.254:8080/HomeworkCorrect_server/";
+    //public static final String CONSTANT = "http://10.7.90.254:8080/HomeworkCorrect_server/";
+    public static final String CONSTANT = "http://192.168.137.1:8080/HomeworkCorrect_server/";
 }
